using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using DevExpress.XtraTab;

namespace Purchase
{
    public partial class ViewConstraint : UserControl
    {
        Purchase.AccountingSystem dbContext = new Purchase.AccountingSystem();

        public ViewConstraint()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.debentures.Load();
            // This line of code is generated by Data Source Configuration Wizard
            debentureBindingSource.DataSource= dbContext.debentures.Local.ToBindingList();
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {

        }

        private void splitContainer1_Panel2_Paint(object sender, PaintEventArgs e)
        {

        }

        private void barButtonItem1_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show("هل تريد التعديل؟", "تأكيد", MessageBoxButtons.YesNo) != DialogResult.Yes)
                return;
            string no = DebGrid.GetRowCellValue(DebGrid.FocusedRowHandle, "DebentureID").ToString();
            Form con = new Form();
            constraint id = new constraint();
            id.Dock = DockStyle.Fill;
            con.Controls.Add(new constraint(no));
            con.BackColor = System.Drawing.Color.White;
            con.StartPosition = FormStartPosition.CenterScreen;
            con.WindowState = FormWindowState.Maximized;
            DialogResult x = con.ShowDialog();
          
        }

       

        private void debentureGridControl_MouseUp(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Right)
                popupMenu1.ShowPopup(Control.MousePosition);
        }

            private void barButtonItem2_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
            {
                if (MessageBox.Show("هل تريد الحذف؟", "تأكيد", MessageBoxButtons.YesNo) !=DialogResult.Yes)
                    return;
                string no = DebGrid.GetRowCellValue(DebGrid.FocusedRowHandle, "DebentureID").ToString();
                int i = int.Parse(no);
                using (var db = new AccountingSystem())
                {
                var widgets = db.debenturedetails.Where(x => x.DebentureID.Equals(i));
                foreach (debenturedetail widget in widgets)
                {
                    db.debenturedetails.Remove(widget);
                }
                db.SaveChanges();

                var d = db.debentures.Where(x => x.DebentureID.Equals(i));         
                foreach (debenture widget in d)
                { 
                db.debentures.Remove(widget);
                }
                db.SaveChanges();
                   MessageBox.Show("تم الحذف بنجاح");
                   Refresh();
            }
        }

            private void barButtonItem3_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
            {
                Refresh();
            }
           

        private void Refresh()
        {
            dbContext = new Purchase.AccountingSystem();
            dbContext.debentures.Load();
            debentureBindingSource.DataSource = dbContext.debentures.Local.ToBindingList();
            DebGrid.RefreshData();
         }

    }
}
