using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;

namespace Purchase
{
    public partial class InvoiceSearching : DevExpress.XtraEditors.XtraUserControl
    {
        //private Invoices Invoices = null;
        long ControlFlag ;
        InvoiceRequest req;
        public InvoiceSearching(long flag)
        {
            ControlFlag = flag;
            InitializeComponent();
            //panelControl1.Hide();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            Purchase.AccountingSystem dbContext = new Purchase.AccountingSystem();

            gridControl2.Hide();

            if (flag == InvoiceWorkflowState.Request)
            {
                
            }
            else if (flag == InvoiceWorkflowState.Approvement)
            {
               // Purchase.AccountingSystem dbContext = new Purchase.AccountingSystem();
                // Call the Load method to get the data for the given DbSet from the database.
                dbContext.Invoices.Where(a => a.WorkflowState == InvoiceWorkflowState.Request).Load();
                // This line of code is generated by Data Source Configuration Wizard
                gridControl1.DataSource = dbContext.Invoices.Local.ToBindingList();
            }
            else if (flag == InvoiceWorkflowState.Payment)
            {
                dbContext.Invoices.Where(a => a.WorkflowState == InvoiceWorkflowState.Approvement).Load();
                // This line of code is generated by Data Source Configuration Wizard
                gridControl1.DataSource = dbContext.Invoices.Local.ToBindingList();
            }
            else if (flag == InvoiceWorkflowState.Completed)
            {
                dbContext.Invoices.Where(a => a.WorkflowState == InvoiceWorkflowState.Payment).Load();
                // This line of code is generated by Data Source Configuration Wizard
                gridControl1.DataSource = dbContext.Invoices.Local.ToBindingList();
            }
            else if (flag == InvoiceWorkflowState.Return)
            {
                dbContext.Invoices.Where(a => a.WorkflowState == InvoiceWorkflowState.Completed).Load();
                // This line of code is generated by Data Source Configuration Wizard
                gridControl1.DataSource = dbContext.Invoices.Local.ToBindingList();
            }
        }

        private void Action_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            int inex = gridView1.GetFocusedDataSourceRowIndex();
            Invoice inv = (Invoice) gridView1.GetFocusedRow();//.GetFocusedDataSourceRowIndex();
            Form toOpen = new Form();
            if (ControlFlag == InvoiceWorkflowState.Request)
            {
                //panelControl1.Show();
            }
            else if (ControlFlag == InvoiceWorkflowState.Approvement)
            {
                req= new InvoiceRequest(InvoiceWorkflowState.Approvement, inv.InvoiceId);
                toOpen.Text = "مراجعة طلب شراء";
                //DevExpress.XtraEditors.XtraDialog.Show(req, "مراجعة طلب شراء", MessageBoxButtons.OKCancel);
            }
            else if (ControlFlag == InvoiceWorkflowState.Payment)
            {
                req = new InvoiceRequest(InvoiceWorkflowState.Payment, inv.InvoiceId);
               // DevExpress.XtraEditors.XtraDialog.Show(req, "إضافة البيانات المالية لفاتورة", MessageBoxButtons.YesNoCancel);
                toOpen.Text = "إضافة البيانات المالية لفاتورة";
            }
            else if (ControlFlag == InvoiceWorkflowState.Completed)
            {
                 req = new InvoiceRequest(InvoiceWorkflowState.Completed, inv.InvoiceId);
                //DevExpress.XtraEditors.XtraDialog.Show(req, "تأكيد إكتمال عملية شراء", MessageBoxButtons.YesNoCancel);
                 toOpen.Text = "تأكيد إكتمال عملية شراء";
            }
            else if (ControlFlag == InvoiceWorkflowState.Return)
            {
                PirachseReturn prn = new PirachseReturn();
                DialogResult ret=DevExpress.XtraEditors.XtraDialog.Show(prn, "إرجاع فاتورة", MessageBoxButtons.YesNoCancel);
                if(ret.Equals(DialogResult.Yes)){
                    //return proceder
                }
                else if (ret.Equals(DialogResult.No))
                {
                     req = new InvoiceRequest(InvoiceWorkflowState.Return, inv.InvoiceId);
                    //DevExpress.XtraEditors.XtraDialog.Show(req, "إرجاع فاتورة", MessageBoxButtons.OK);
                     toOpen.Text = "إرجاع فاتورة";
                }else{

                }

            }
            //gridControl1.Hide();
            //Purchase.AccountingSystem dbContext = new Purchase.AccountingSystem();
            //dbContext.InvoiceDetails.Where(a => a.InvoiceId == inv.InvoiceId).Load();
            //gridControl2.DataSource = dbContext.InvoiceDetails.Local.ToBindingList();   
            toOpen.Controls.Add(req);
            toOpen.WindowState = FormWindowState.Maximized;
            toOpen.ShowDialog();
        }

        private void splitContainer1_Panel1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void gridControl1_Click(object sender, EventArgs e)
        {

        }

        private void splitContainer1_SplitterMoved(object sender, SplitterEventArgs e)
        {

        }

        private void gridControl2_Click(object sender, EventArgs e)
        {

        }


    }
}
