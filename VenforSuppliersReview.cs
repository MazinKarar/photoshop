using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;

namespace Purchase
{
    public partial class VenforVendpliersReview : DevExpress.XtraEditors.XtraUserControl
    {
        Purchase.AccountingSystem dbContext;
        Boolean isVendor = true;
        Boolean isSpuulier = false;
        public VenforVendpliersReview()
        {
            InitializeComponent();
            Vendor.Visible = true;
            Supplier.Visible = false;
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            dbContext = new Purchase.AccountingSystem();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.VendorSets.Load();
            // This line of code is generated by Data Source Configuration Wizard
            using (var db = new AccountingSystem())
            {
                var dc = from c in db.VendorSets
                         //where c.Id.Equals(InvoiceID)
                         select new
                         {
                             c.VendorName,
                             c.VendorCompanyName,
                             c.VendorStatus,
                             c.VendorBankName,
                             c.VendorPhone1,
                             c.VendorTypeOfBalance
                         };
                bindingSource1.DataSource = dc.ToList();
            }

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.SupplierSets.Load();
            // This line of code is generated by Data Source Configuration Wizard
            using (var db = new AccountingSystem())
            {
                var dc = from c in db.SupplierSets
                         //where c.Id.Equals(InvoiceID)
                         select new
                         {
                             c.SupplierName,
                             c.SupplierCompanyName,
                             c.SupplierStatus,
                             c.SupplierBankName,
                             c.SupplierPhone1,
                             c.SupplierTypeOfBalance
                         };
                bindingSource2.DataSource = dc.ToList();
                //bindingSource2.DataSource = dbContext.SupplierSets.Local.ToBindingList();
            }
            ReprotStatus.SelectedIndex = 2;
        }

        private void button1_Click(object sender, EventArgs e)
        {
            
        }

        private void VenforVendpliersReview_Load(object sender, EventArgs e)
        {

        }

        private void ReportVendor_Click(object sender, EventArgs e)
        {
            ReportVendors();
        }
        public void ReportVendors()
        {
            isVendor = true;
            isSpuulier = false;
            Vendor.Visible = true;
            Supplier.Visible = false;
            //MessageBox.Show(ReprotStatus.SelectedIndex.ToString());
            using (var db = new AccountingSystem())
            {
                String status = "2";
                if ((ReprotStatus.SelectedIndex.ToString().Equals("0")) || (ReprotStatus.SelectedIndex.ToString().Equals("1")))
                {
                    if (ReprotStatus.SelectedIndex.ToString().Equals("0"))
                        status = "True";
                    if (ReprotStatus.SelectedIndex.ToString().Equals("1"))
                        status = "False";
                    var dc = from c in db.VendorSets
                             where c.VendorStatus.Equals(status)

                             select new
                             {
                                 c.VendorName,
                                 c.VendorCompanyName,
                                 c.VendorStatus,
                                 c.VendorBankName,
                                 c.VendorPhone1,
                                 c.VendorTypeOfBalance
                             };
                    bindingSource1.DataSource = dc.ToList();
                    Vendor.Refresh();
                }
                else
                {
                    var dc = from c in db.VendorSets
                             //where c.VendorStatus.Equals(status)
                             select new
                             {
                                 c.VendorName,
                                 c.VendorCompanyName,
                                 c.VendorStatus,
                                 c.VendorBankName,
                                 c.VendorPhone1,
                                 c.VendorTypeOfBalance
                             };
                    bindingSource1.DataSource = dc.ToList();
                    Vendor.Refresh();
                }
            }
        }

        private void ReprotVendplier_Click(object sender, EventArgs e)
        {
            ReprotSupplier();
        }
        public void ReprotSupplier()
        {
            isVendor = false;
            isSpuulier = true;
            Vendor.Visible = false;
            Supplier.Visible = true;
            //MessageBox.Show(ReprotStatus.SelectedIndex.ToString());
            using (var db = new AccountingSystem())
            {
                String status = "2";
                if ((ReprotStatus.SelectedIndex.ToString().Equals("0")) || (ReprotStatus.SelectedIndex.ToString().Equals("1")))
                {

                    if (ReprotStatus.SelectedIndex.ToString().Equals("0"))
                        status = "True";
                    if (ReprotStatus.SelectedIndex.ToString().Equals("1"))
                        status = "False";
                    var dc = from c in db.SupplierSets
                             where c.SupplierStatus.Equals(status)

                             select new
                             {
                                 c.SupplierName,
                                 c.SupplierCompanyName,
                                 c.SupplierStatus,
                                 c.SupplierBankName,
                                 c.SupplierPhone1,
                                 c.SupplierTypeOfBalance
                             };
                    bindingSource2.DataSource = dc.ToList();
                    Supplier.Refresh();
                }
                else
                {
                    var dc = from c in db.SupplierSets
                             //where c.VendorStatus.Equals(status)
                             select new
                             {
                                 c.SupplierName,
                                 c.SupplierCompanyName,
                                 c.SupplierStatus,
                                 c.SupplierBankName,
                                 c.SupplierPhone1,
                                 c.SupplierTypeOfBalance
                             };
                    bindingSource2.DataSource = dc.ToList();
                    Supplier.Refresh();
                }
            }
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {

        }

        private void ReprotStatus_SelectedIndexChanged(object sender, EventArgs e)
        {
            if(isVendor)
                ReportVendors();
            if (isSpuulier)
                ReprotSupplier();
        }

    }
}
